<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/><!-- 加载配置文件 -->


    <!--配置数据源-->
    <!--<bean id="dateSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--<property name="driverClass" value="${jdbc.driverClassName}"></property>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"></property>-->
        <!--<property name="user" value="${jdbc.username}"></property>-->
        <!--<property name="password" value="${jdbc.password}"></property>-->
    <!--</bean>-->

    <!--ioc 注入-->
    <bean id="userService" class="com.lz.springAop.service.impl.UserServiceImpl"></bean>

    <bean id="logger" class="com.lz.springAop.utils.Logger"></bean>

    <aop:config >
        <!--配置切面-->
        <!--切入点表达式 id属性 表达式唯一标志
            如果写在当前切面内。只能当前切面可用。如写在aop：aspect为。其他切面可以用-->
        <aop:pointcut id="pointcut" expression="execution(* com..*.*())"></aop:pointcut>
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置通知类型 建立通知方法和切入点方法的关联      * *..*.*(..)             -->
            <!--<aop:before method="printlog" pointcut="execution( void  com..saveUser())"></aop:before>-->
            <!--前置通知 在切入点方法执行前执行
            <aop:before method="beforPrintlog" pointcut-ref="pointcut" ></aop:before>-->

            <!--后置通知 切入点正常执行后执行 与异常通知只会存在一个
            <aop:after-returning method="afterReturningPrintlog" pointcut-ref="pointcut"></aop:after-returning>-->

            <!--异常通知 切入点发生异常执行
            <aop:after-throwing method="afterThrowingPrintlog" pointcut-ref="pointcut" ></aop:after-throwing>-->

            <!--最终通知 最后一定会执行
            <aop:after method="afterPrintlog" pointcut-ref="pointcut" ></aop:after>-->


            <!---环绕通知-->
            <aop:around method="aroundPrintLog" pointcut-ref="pointcut"></aop:around>

        </aop:aspect>

    </aop:config>
</beans>